{"version":3,"sources":["components/Header.jsx","pages/Home.jsx","services/repositories.js","pages/Github.jsx","actions/actionRepositories.js","pages/Projects.jsx","pages/NotFound.jsx","App.js","serviceWorker.js","reducers/dataCart.js","reducers/SearchInput.js","reducers/Skills.js","reducers/repositories.js","reducers/index.js","actions/SearchInput.js","actions/dataCart.js","store/index.js","index.js"],"names":["Header","className","to","onClick","window","open","Home","skills","useSelector","state","about","objetive","resume","map","skill","index","name","status","callRepos","fetch","then","data","json","Github","useDispatch","dispatch","type","repos","console","log","Projects","NotFound","App","exact","path","component","Boolean","location","hostname","match","INITIAL_STATE","productsLoading","INITAL_STATE","loading","rootReducer","combineReducers","SearchInput","action","dataCart","reducerRepositories","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac4cb48d.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <div className=\"header-fix\">\n      <div>\n        <Link to=\"/home\">\n          <button>Inicio</button>\n        </Link>\n      </div>\n      <div>\n        <Link to=\"/projects\">\n          <button>Projetos</button>\n        </Link>\n      </div>\n      <div>\n        <Link to=\"/github\">\n          <button>GitHub</button>\n        </Link>\n      </div>\n      <div>\n        <button onClick={() => window.open('https://www.linkedin.com/in/cacobribeiro/')}>\n          LinkedIn\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction Home() {\n  const skills = useSelector((state) => state.about.skills);\n  const objetive = useSelector((state) => state.about.objetive);\n  const resume = useSelector((state) => state.about.resume);\n  return (\n    <div className=\"container-home\">\n      <div>\n        <h1>Caio Bueno Ribeiro</h1>\n      </div>\n      <div>\n        <h2>Objetivos:</h2>\n        <p>{objetive}</p>\n      </div>\n      <div>\n        <h2>Resumo:</h2>\n        <p>\n          <p>{resume}</p>\n        </p>\n      </div>\n      <div>\n        <h1>Habilidades / Ferramentas:</h1>\n        <ol className=\"ol-conteiner\">\n          {skills.map((skill, index) => (\n            <li className=\"skills-map\">\n              <p className=\"skill-name\">{skill.name}:</p>\n              <p className={skill.status === ' SKILLED' ? 'skill-done' : 'skill-progress'}>\n                {skill.status}\n              </p>\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","const callRepos = () => {\n  fetch('https://api.github.com/users/cacobribeiro/repos').then((data) => data.json());\n};\n\nexport default callRepos;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchRepos } from '../actions/actionRepositories';\nimport callRepos from '../services/repositories';\n\nfunction Github() {\n  const dispatch = useDispatch();\n  dispatch(fetchRepos());\n  console.log(callRepos());\n  return (\n    <div>\n      <div>GITHUB REPOSITORIOS</div>\n    </div>\n  );\n}\n\nexport default Github;\n","import callRepos from '../services/repositories';\nexport const CALL_REPOS = 'CALL_REPOS';\nexport const CALL_REPOS_SUCESS = 'CALL_REPOS_SUCESS';\n\nexport const firstRepos = () => ({\n  type: CALL_REPOS,\n});\n\nexport const secondRepos = (repos) => ({\n  type: CALL_REPOS_SUCESS,\n  repos,\n});\n\nexport function fetchRepos() {\n  return (dispatch) => {\n    dispatch(firstRepos());\n    return callRepos().then((data) => dispatch(secondRepos(data)));\n  };\n}\n","import React from 'react';\n\nfunction Projects() {\n  return (\n    <div>\n      <div>PROJETOS DESENVOLVIDOS!</div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <div>\n        <h1>Pagina n√£o encontrada, sorry!</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Github from './pages/Github';\nimport Projects from './pages/Projects';\nimport NotFound from './pages/NotFound';\nconst App = () => {\n  return (\n    <div>\n      <div className=\"App\">\n        <Header />\n      </div>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/github\" component={Github} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { API_REQUEST_DATA, API_REQUEST_DATA_SUCESS } from '../actions/dataCart';\n\nconst INITIAL_STATE = {\n  data: [],\n  productsLoading: true,\n};\n\nexport const dataCart = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case API_REQUEST_DATA:\n      return {\n        ...state,\n        productsLoading: true,\n      };\n    case API_REQUEST_DATA_SUCESS:\n      return {\n        ...state,\n        data: [...state.data, action.data],\n        productsLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_NAME } from '../actions/SearchInput.js';\n\nconst INITIAL_STATE = {\n  name: '',\n};\n\nexport const SearchInput = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SEARCH_NAME:\n      return {\n        ...state,\n        name: action.name,\n      };\n    default:\n      return state;\n  }\n};\n","const INITAL_STATE = {\n  resume: `Estou cursando a Trybe e venho me aperfei√ßoando a cada dia mais em desenvolvimento e\n  softskills. Hoje sou muito confiante e me sinto muito preparado para exercer a minha\n  fun√ß√£o. Atualmente procuro uma vaga como Desenvolvedor Front-End, por√©m em 6 meses\n  aproximadamente me formarei como Full-Stack. Estou a procura de algo que venha me agregar\n  mais conhecimento e que eu possa agregar com o meu servi√ßo.`,\n  objetive: ` - Meu objetivo √© me tornar um profissional excepcional na minha √°rea, para agregar valor a\n  todos ao meu redor. Atualmente sou Desenvolvedor Front-End, estou cursando Back-End e em\n  breve serei considerado Full-Stack, formado pela Trybe.`,\n  skills: [\n    { name: 'Git', status: ' SKILLED' },\n    { name: 'Github', status: ' SKILLED' },\n    { name: 'HTML Sem√¢ntico', status: ' SKILLED' },\n    { name: 'CSS Responsivo', status: ' SKILLED' },\n    { name: 'Javascript', status: ' SKILLED' },\n    { name: 'ES6', status: ' SKILLED' },\n    { name: 'Testes unit√°rios', status: ' SKILLED' },\n    { name: 'TDD', status: ' SKILLED' },\n    { name: 'Jest', status: ' SKILLED' },\n    { name: 'React', status: ' SKILLED' },\n    { name: 'Redux', status: ' SKILLED' },\n    { name: 'Hooks', status: ' SKILLED' },\n    { name: 'ContextAPI', status: ' SKILLED' },\n    { name: 'Metologias √°geis', status: ' SKILLED' },\n    { name: 'SQL', status: 'ON PROGRESS' },\n    { name: 'MongoDB', status: 'ON PROGRESS' },\n    { name: 'NodeJS', status: 'COMING SOON' },\n    { name: 'Deploy', status: 'COMING SOON' },\n    { name: 'Python', status: 'COMING SOON' },\n  ],\n};\n\nexport const about = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case 'ALL_SKILLS':\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  repos: [],\n  loading: false,\n};\n\nexport const reducerRepositories = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'CALL_REPOS':\n      return {\n        ...state,\n      };\n    case 'CALL_REPOS_SUCESS':\n      return {\n        ...state,\n        repos: action.repos,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { dataCart } from './dataCart';\nimport { SearchInput } from './SearchInput';\nimport { about } from './Skills';\nimport { reducerRepositories } from './repositories';\n\nconst rootReducer = combineReducers({\n  SearchInput,\n  dataCart,\n  about,\n  reducerRepositories,\n});\n\nexport default rootReducer;\n","export const SEARCH_NAME = 'SEARCH_NAME';\n\nexport const SearchInput = (name) => ({\n  type: SEARCH_NAME,\n  name,\n});\n","import ProductAPI from '../services/ProductsAPI';\nexport const API_REQUEST_DATA = 'API_REQUEST_DATA';\nexport const API_REQUEST_DATA_SUCESS = 'API_REQUEST_DATA_SUCESS';\n\nexport const dataCart = () => ({\n  type: API_REQUEST_DATA,\n  productsLoading: true,\n});\n\nexport const dataCartSucess = (data) => ({\n  type: API_REQUEST_DATA_SUCESS,\n  data,\n  productsLoading: false,\n});\n\nexport function fetchProducts(searchInput) {\n  return (dispatch) => {\n    dispatch(dataCart());\n\n    return ProductAPI(searchInput).then((data) => dispatch(dataCartSucess(data)));\n  };\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}