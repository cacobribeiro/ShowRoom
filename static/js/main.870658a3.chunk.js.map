{"version":3,"sources":["components/Header.jsx","pages/Home.jsx","services/repositories.js","pages/Github.jsx","actions/actionRepositories.js","pages/Projects.jsx","pages/NotFound.jsx","pages/AboutMe.jsx","App.js","serviceWorker.js","reducers/dataCart.js","reducers/SearchInput.js","reducers/Skills.js","reducers/repositories.js","reducers/index.js","actions/SearchInput.js","actions/dataCart.js","store/index.js","index.js"],"names":["Header","className","to","onClick","window","open","Home","class","style","maxWidth","callRepos","fetch","then","data","json","Github","dispatch","useDispatch","useEffect","type","repos","useSelector","state","reducerRepositories","loading","map","e","name","language","href","html_url","role","Projects","NotFound","AboutMe","skills","about","objetive","resume","title","skill","index","key","status","App","exact","path","component","Boolean","location","hostname","match","INITIAL_STATE","productsLoading","INITAL_STATE","rootReducer","combineReducers","SearchInput","action","dataCart","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.870658a3.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <div className=\"navbar navbar-dark bg-dark\">\n      <Link className=\"btn btn-outline-light\" to=\"/home\">\n        Inicio\n      </Link>\n      <Link className=\"btn btn-outline-light\" to=\"/sobre\">\n        Sobre\n      </Link>\n      <Link className=\"btn btn-outline-light\" to=\"/projects\">\n        Projetos\n      </Link>\n      <Link className=\"btn btn-outline-light\" to=\"/github\">\n        GitHub\n      </Link>\n      <Link\n        onClick={() => window.open('https://www.linkedin.com/in/cacobribeiro/')}\n        className=\"btn btn-outline-light\"\n        to=\"#\"\n      >\n        LinkedIn\n      </Link>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"container-lg d-flex justify-content-center\">\n        <h1>cacobribeiro/ShowRoom</h1>\n      </div>\n      <div className=\"container-lg d-flex justify-content-center\">\n        <div class=\"card text-white bg-secondary mb-3\" style={{ maxWidth: '95%' }}>\n          <div class=\"card-header\">Portifólio</div>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              Este site está sendo desenvolvido usando React, Hooks e Redux.\n            </h5>\n            <p class=\"card-text\">\n              A pouco tempo aprendi a utilizar React + Redux e foi paixão a primeira vista, achei\n              uma ferramenta maravilhosa. Estudando mais a respeito aprendi que usando Hooks, nós\n              seriamos capazes de utilizar deixar de lado os comandos mapStateToProps e\n              mapDispatchToProps achei isso muito bacana e estou aprendendo a utilizar melhor essa\n              ferramenta. Aqui irei postar meus projetos e a ideia é que vire um portifólio\n              completo.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","const callRepos = () =>\n  fetch('https://api.github.com/users/cacobribeiro/repos').then((data) => data.json());\n\nexport default callRepos;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchRepos } from '../actions/actionRepositories';\n\nfunction Github() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRepos());\n  }, []);\n\n  const repos = useSelector((state) => state.reducerRepositories.repos);\n  const loading = useSelector((state) => state.reducerRepositories.loading);\n  const redirect = (url) => (window.location.href = url);\n\n  return (\n    <div className=\"container-fluid\">\n      {!loading ? (\n        <div class=\"d-flex justify-content-center\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        repos.map((e) => {\n          return (\n            <div class=\"mt-3 container-sm card w-75\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Repositório: {e.name}</h5>\n                <p class=\"card-text\">Linguagens: {e.language ? e.language : 'Nenhuma'}</p>\n                <a href={e.html_url} class=\"btn btn-primary\">\n                  Ver\n                </a>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n}\n\nexport default Github;\n","import callRepos from '../services/repositories';\n\nexport const CALL_REPOS = 'CALL_REPOS';\nexport const CALL_REPOS_SUCESS = 'CALL_REPOS_SUCESS';\n\nexport const firstRepos = () => ({\n  type: CALL_REPOS,\n});\n\nexport const secondRepos = (repos) => ({\n  type: CALL_REPOS_SUCESS,\n  repos,\n});\n\nexport function fetchRepos() {\n  return (dispatch) => {\n    dispatch(firstRepos());\n    return callRepos().then((data) => dispatch(secondRepos(data)));\n  };\n}\n","import React from 'react';\n\nfunction Projects() {\n  return (\n    <div>\n      <div>PROJETOS DESENVOLVIDOS!</div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <div>\n        <h1>Pagina não encontrada, sorry!</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction AboutMe() {\n  const skills = useSelector((state) => state.about.skills);\n  const objetive = useSelector((state) => state.about.objetive);\n  const resume = useSelector((state) => state.about.resume);\n\n  useEffect(() => {\n    // alert(`Em Construção... Entre, mas não repare a falta do CSS e Bug's`);\n  }, []);\n\n  return (\n    <div className=\"container-lg\">\n      <div className=\"container d-flex justify-content-center\">\n        <blockquote class=\"blockquote\">\n          <p class=\"display-4 mb-0\">Caio Bueno Ribeiro</p>\n          <footer class=\"blockquote-footer\">\n            Desenvolvedor<cite title=\"Source Title\">Front-End</cite>\n          </footer>\n        </blockquote>\n      </div>\n      <div class=\"card border-secondary mb-3\" style={{ maxWidth: '95%' }}>\n        <div class=\"card-header\">Objetivo</div>\n        <div class=\"card-body text-secondary\">\n          <p class=\"card-text\">{objetive}</p>\n        </div>\n      </div>\n      <div class=\"card border-secondary mb-3\" style={{ maxWidth: '95%' }}>\n        <div class=\"card-header\">Resumo</div>\n        <div class=\"card-body text-secondary\">\n          <p class=\"card-text\">{resume}</p>\n        </div>\n      </div>\n      <h1>Habilidades / Ferramentas:</h1>\n      <div>\n        <ul class=\"list-group\">\n          {skills.map((skill, index) => (\n            <li\n              key={index}\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              {skill.name}\n              {skill.status === ' SKILLED' ? (\n                <span class=\"ml-1 badge badge-pill badge-success\">Concluido!</span>\n              ) : (\n                <span class=\"badge badge-pill badge-danger\">Em Treinamento...</span>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutMe;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Github from './pages/Github';\nimport Projects from './pages/Projects';\nimport NotFound from './pages/NotFound';\nimport AboutMe from './pages/AboutMe';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"App\">\n        <Header />\n      </div>\n      <div className=\"container-lg\">\n        <Switch>\n          <Route exact path=\"/sobre\" component={AboutMe} />\n          <Route exact path=\"/ShowRoom\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/github\" component={Github} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { API_REQUEST_DATA, API_REQUEST_DATA_SUCESS } from '../actions/dataCart';\n\nconst INITIAL_STATE = {\n  data: [],\n  productsLoading: true,\n};\n\nexport const dataCart = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case API_REQUEST_DATA:\n      return {\n        ...state,\n        productsLoading: true,\n      };\n    case API_REQUEST_DATA_SUCESS:\n      return {\n        ...state,\n        data: [...state.data, action.data],\n        productsLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_NAME } from '../actions/SearchInput.js';\n\nconst INITIAL_STATE = {\n  name: '',\n};\n\nexport const SearchInput = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SEARCH_NAME:\n      return {\n        ...state,\n        name: action.name,\n      };\n    default:\n      return state;\n  }\n};\n","const INITAL_STATE = {\n  resume: `Estou cursando a Trybe e venho me aperfeiçoando a cada dia mais em desenvolvimento e\n  softskills. Hoje sou muito confiante e me sinto muito preparado para exercer a minha\n  função. Atualmente procuro uma vaga como Desenvolvedor Front-End, porém em 6 meses\n  aproximadamente me formarei como Full-Stack. Estou a procura de algo que venha me agregar\n  mais conhecimento e que eu possa agregar com o meu serviço.`,\n  objetive: ` - Meu objetivo é me tornar um profissional excepcional na minha área, para agregar valor a\n  todos ao meu redor. Atualmente sou Desenvolvedor Front-End, estou cursando Back-End e em\n  breve serei considerado Full-Stack, formado pela Trybe.`,\n  skills: [\n    { name: 'Git', status: ' SKILLED' },\n    { name: 'Github', status: ' SKILLED' },\n    { name: 'HTML Semântico', status: ' SKILLED' },\n    { name: 'CSS Responsivo', status: ' SKILLED' },\n    { name: 'Javascript', status: ' SKILLED' },\n    { name: 'ES6', status: ' SKILLED' },\n    { name: 'Testes unitários', status: ' SKILLED' },\n    { name: 'TDD', status: ' SKILLED' },\n    { name: 'Jest', status: ' SKILLED' },\n    { name: 'React', status: ' SKILLED' },\n    { name: 'Redux', status: ' SKILLED' },\n    { name: 'Hooks', status: ' SKILLED' },\n    { name: 'ContextAPI', status: ' SKILLED' },\n    { name: 'Metologias ágeis', status: ' SKILLED' },\n    { name: 'SQL', status: 'ON PROGRESS' },\n    { name: 'MongoDB', status: 'ON PROGRESS' },\n    { name: 'NodeJS', status: 'COMING SOON' },\n    { name: 'Deploy', status: 'COMING SOON' },\n    { name: 'Python', status: 'COMING SOON' },\n  ],\n};\n\nexport const about = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case 'ALL_SKILLS':\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  repos: [],\n  loading: false,\n};\n\nexport const reducerRepositories = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'CALL_REPOS':\n      return {\n        ...state,\n      };\n    case 'CALL_REPOS_SUCESS':\n      return {\n        ...state,\n        repos: action.repos,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { dataCart } from './dataCart';\nimport { SearchInput } from './SearchInput';\nimport { about } from './Skills';\nimport { reducerRepositories } from './repositories';\n\nconst rootReducer = combineReducers({\n  SearchInput,\n  dataCart,\n  about,\n  reducerRepositories,\n});\n\nexport default rootReducer;\n","export const SEARCH_NAME = 'SEARCH_NAME';\n\nexport const SearchInput = (name) => ({\n  type: SEARCH_NAME,\n  name,\n});\n","import ProductAPI from '../services/ProductsAPI';\nexport const API_REQUEST_DATA = 'API_REQUEST_DATA';\nexport const API_REQUEST_DATA_SUCESS = 'API_REQUEST_DATA_SUCESS';\n\nexport const dataCart = () => ({\n  type: API_REQUEST_DATA,\n  productsLoading: true,\n});\n\nexport const dataCartSucess = (data) => ({\n  type: API_REQUEST_DATA_SUCESS,\n  data,\n  productsLoading: false,\n});\n\nexport function fetchProducts(searchInput) {\n  return (dispatch) => {\n    dispatch(dataCart());\n\n    return ProductAPI(searchInput).then((data) => dispatch(dataCartSucess(data)));\n  };\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import { Provider } from 'react-redux';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}